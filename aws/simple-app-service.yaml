AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  Tag:
    Type: String
Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref AWS::StackName
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 30
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "EcsServiceDiscovery"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecs:ListTasks"
                  - "ecs:DescribeTasks"
                Resource: "*"
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: simple-app-nodejs
          Image:
            !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/simple-app:${Tag}"
          ReadonlyRootFilesystem: true
          PortMappings:
          - ContainerPort: 3001
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: simple-app
          Environment:
            - Name: OPEN_WEATHER_API_KEY
              Value: "{{resolve:secretsmanager:OPEN_WEATHER_API_KEY}}"
  ServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "${AWS::StackName} security group"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          CidrIp: 0.0.0.0/0
          FromPort: 3001
          ToPort: 3001
  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref Subnets
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !GetAtt ServiceSecurityGroup.GroupId
      LaunchType: FARGATE
      ServiceName: !Ref AWS::StackName
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition

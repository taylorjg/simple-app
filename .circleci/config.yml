version: 2
jobs:
  build-job:
    docker:
      - image: circleci/node:10.15-stretch-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
      - run:
          command: OPEN_WEATHER_API_KEY=$OPEN_WEATHER_API_KEY node server
          background: true
      - run:
          command: npm start
          background: true
      - run: npm run e2e
      - run: killall -QUIT node

  deploy-heroku-job:
    docker:
      - image: circleci/node:10.15
    steps:
      - checkout
      - run:
          name: Run setup script
          command: bash .circleci/setup-heroku.sh
      - add_ssh_keys:
          fingerprints:
            - "87:da:92:b5:bf:18:cd:06:58:25:64:de:2b:cf:93:b3"
      - run:
          name: Deploy master to Heroku
          command: |
            git push --force git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master
            heroku restart -a $HEROKU_APP_NAME

  deploy-aws-job:
    docker:
      - image: taylorjg/circleci-aws:v1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker image and push to AWS ECR
          command: aws/publish-image.sh
      - run:
          name: Create/update AWS CloudFormation stack
          command: aws/deploy-service.sh
      - run:
          name: Create/update AWS Route 53 DNS A record
          command: node aws/manage-dns.js

  deploy-aws-with-alb-job:
    docker:
      - image: taylorjg/circleci-aws:v1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker image and push to AWS ECR
          command: aws/publish-image.sh
      - run:
          name: Create/update AWS CloudFormation stack
          command: aws/deploy-service-with-alb.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-heroku-job:
          requires:
            - build-job
          filters:
            branches:
              only: master
